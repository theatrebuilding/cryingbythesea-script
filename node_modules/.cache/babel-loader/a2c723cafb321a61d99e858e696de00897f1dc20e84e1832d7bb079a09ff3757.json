{"ast":null,"code":"var _jsxFileName = \"/Users/jazbogross/Documents/Websites/cryingbythesea-script/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [script, setScript] = useState([]);\n  const scriptRef = useRef(null);\n\n  // Helper function to parse text for star formatting.\n  // - ***text*** → bold+italic (<strong><em>text</em></strong>)\n  // - **text**   → bold (<strong>text</strong>)\n  // - *text*     → italic (<em>text</em>)\n  const parseFormattedText = text => {\n    // This regex matches triple, double, or single star markers.\n    // Group 2 captures content inside ***...***,\n    // Group 3 captures content inside **...**,\n    // Group 4 captures content inside *...*.\n    const regex = /(\\*\\*\\*([^*]+)\\*\\*\\*|\\*\\*([^*]+)\\*\\*|\\*([^*]+)\\*)/g;\n    const result = [];\n    let lastIndex = 0;\n    let match;\n    let counter = 0;\n    while ((match = regex.exec(text)) !== null) {\n      // Push any text that comes before the current match.\n      if (match.index > lastIndex) {\n        result.push(text.slice(lastIndex, match.index));\n      }\n      if (match[2]) {\n        // Triple stars: bold and italic.\n        result.push(/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: match[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, counter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this));\n      } else if (match[3]) {\n        // Double stars: bold.\n        result.push(/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: match[3]\n        }, counter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this));\n      } else if (match[4]) {\n        // Single star: italic.\n        result.push(/*#__PURE__*/_jsxDEV(\"em\", {\n          children: match[4]\n        }, counter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this));\n      }\n      counter++;\n      lastIndex = regex.lastIndex;\n    }\n    // Append any remaining text after the last match.\n    if (lastIndex < text.length) {\n      result.push(text.slice(lastIndex));\n    }\n    return result;\n  };\n\n  // Fetch the script from the JSON file.\n  useEffect(() => {\n    fetch('/script.json').then(response => response.json()).then(data => {\n      // Convert the \"script\" object (with line numbers as keys)\n      // into a sorted array of script lines.\n      const lines = Object.keys(data.script).sort((a, b) => Number(a) - Number(b)).map(key => data.script[key]);\n      setScript(lines);\n    }).catch(error => console.error('Error fetching script:', error));\n  }, []);\n\n  // Calculate the initial scroll offset based on GMT time.\n  useEffect(() => {\n    if (!scriptRef.current || script.length === 0) return;\n    const container = scriptRef.current;\n    // Duplicate the script to allow seamless scrolling; we use half the total height.\n    const totalScrollHeight = container.scrollHeight / 2;\n    const SCROLL_SPEED = 10; // pixels per second (adjust if needed)\n    const duration = totalScrollHeight / SCROLL_SPEED;\n    const now = new Date();\n    const gmtTimeInSeconds = now.getUTCHours() * 3600 + now.getUTCMinutes() * 60 + now.getUTCSeconds();\n    const scrollPosition = gmtTimeInSeconds % duration / duration * totalScrollHeight;\n    container.scrollTop = scrollPosition;\n  }, [script]);\n\n  // Handle scrolling to ensure a seamless wrap-around.\n  const handleScroll = () => {\n    const container = scriptRef.current;\n    if (!container) return;\n    const halfHeight = container.scrollHeight / 2;\n    if (container.scrollTop >= halfHeight) {\n      container.scrollTop -= halfHeight;\n    } else if (container.scrollTop < 0) {\n      container.scrollTop += halfHeight;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll-container\",\n      ref: scriptRef,\n      style: {\n        height: '100%',\n        overflowY: 'scroll'\n      },\n      onScroll: handleScroll,\n      children: [script.map((lineObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"script-line\",\n        style: {\n          textAlign: lineObj.alignment\n        },\n        children: parseFormattedText(lineObj.text)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)), script.map((lineObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"script-line\",\n        style: {\n          textAlign: lineObj.alignment\n        },\n        children: parseFormattedText(lineObj.text)\n      }, `repeat-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EEStCZrlpvdkixRgyXVKTS8XfTk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","script","setScript","scriptRef","parseFormattedText","text","regex","result","lastIndex","match","counter","exec","index","push","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","length","fetch","then","response","json","data","lines","Object","keys","sort","a","b","Number","map","key","catch","error","console","current","container","totalScrollHeight","scrollHeight","SCROLL_SPEED","duration","now","Date","gmtTimeInSeconds","getUTCHours","getUTCMinutes","getUTCSeconds","scrollPosition","scrollTop","handleScroll","halfHeight","className","ref","style","height","overflowY","onScroll","lineObj","textAlign","alignment","_c","$RefreshReg$"],"sources":["/Users/jazbogross/Documents/Websites/cryingbythesea-script/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [script, setScript] = useState([]);\n  const scriptRef = useRef(null);\n\n  // Helper function to parse text for star formatting.\n  // - ***text*** → bold+italic (<strong><em>text</em></strong>)\n  // - **text**   → bold (<strong>text</strong>)\n  // - *text*     → italic (<em>text</em>)\n  const parseFormattedText = (text) => {\n    // This regex matches triple, double, or single star markers.\n    // Group 2 captures content inside ***...***,\n    // Group 3 captures content inside **...**,\n    // Group 4 captures content inside *...*.\n    const regex = /(\\*\\*\\*([^*]+)\\*\\*\\*|\\*\\*([^*]+)\\*\\*|\\*([^*]+)\\*)/g;\n    const result = [];\n    let lastIndex = 0;\n    let match;\n    let counter = 0;\n    while ((match = regex.exec(text)) !== null) {\n      // Push any text that comes before the current match.\n      if (match.index > lastIndex) {\n        result.push(text.slice(lastIndex, match.index));\n      }\n      if (match[2]) {\n        // Triple stars: bold and italic.\n        result.push(\n          <strong key={counter}>\n            <em>{match[2]}</em>\n          </strong>\n        );\n      } else if (match[3]) {\n        // Double stars: bold.\n        result.push(<strong key={counter}>{match[3]}</strong>);\n      } else if (match[4]) {\n        // Single star: italic.\n        result.push(<em key={counter}>{match[4]}</em>);\n      }\n      counter++;\n      lastIndex = regex.lastIndex;\n    }\n    // Append any remaining text after the last match.\n    if (lastIndex < text.length) {\n      result.push(text.slice(lastIndex));\n    }\n    return result;\n  };\n\n  // Fetch the script from the JSON file.\n  useEffect(() => {\n    fetch('/script.json')\n      .then((response) => response.json())\n      .then((data) => {\n        // Convert the \"script\" object (with line numbers as keys)\n        // into a sorted array of script lines.\n        const lines = Object.keys(data.script)\n          .sort((a, b) => Number(a) - Number(b))\n          .map((key) => data.script[key]);\n        setScript(lines);\n      })\n      .catch((error) => console.error('Error fetching script:', error));\n  }, []);\n\n  // Calculate the initial scroll offset based on GMT time.\n  useEffect(() => {\n    if (!scriptRef.current || script.length === 0) return;\n\n    const container = scriptRef.current;\n    // Duplicate the script to allow seamless scrolling; we use half the total height.\n    const totalScrollHeight = container.scrollHeight / 2;\n    const SCROLL_SPEED = 10; // pixels per second (adjust if needed)\n    const duration = totalScrollHeight / SCROLL_SPEED;\n\n    const now = new Date();\n    const gmtTimeInSeconds =\n      now.getUTCHours() * 3600 +\n      now.getUTCMinutes() * 60 +\n      now.getUTCSeconds();\n\n    const scrollPosition =\n      ((gmtTimeInSeconds % duration) / duration) * totalScrollHeight;\n\n    container.scrollTop = scrollPosition;\n  }, [script]);\n\n  // Handle scrolling to ensure a seamless wrap-around.\n  const handleScroll = () => {\n    const container = scriptRef.current;\n    if (!container) return;\n\n    const halfHeight = container.scrollHeight / 2;\n\n    if (container.scrollTop >= halfHeight) {\n      container.scrollTop -= halfHeight;\n    } else if (container.scrollTop < 0) {\n      container.scrollTop += halfHeight;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div\n        className=\"scroll-container\"\n        ref={scriptRef}\n        style={{ height: '100%', overflowY: 'scroll' }}\n        onScroll={handleScroll}\n      >\n        {/* Render the original script lines */}\n        {script.map((lineObj, index) => (\n          <div\n            key={index}\n            className=\"script-line\"\n            style={{ textAlign: lineObj.alignment }}\n          >\n            {parseFormattedText(lineObj.text)}\n          </div>\n        ))}\n        {/* Duplicate the script lines for seamless scrolling */}\n        {script.map((lineObj, index) => (\n          <div\n            key={`repeat-${index}`}\n            className=\"script-line\"\n            style={{ textAlign: lineObj.alignment }}\n          >\n            {parseFormattedText(lineObj.text)}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}